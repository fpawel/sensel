--[[

Функция product определяет тип ЧЕ:
    product(name, measurements...)
        name - строка, наименование типа ЧЭ
        measurements - список измерений, которые должны быть выполнены для данного типа ЧЭ.
            Объекты в списке measurements разделены запятыми и создаются в результате вызова функции measure.

Функция measure определяет измерение параметра ЧЭ и добавляет колонку в итоговую таблицу обмера:
    measure(name, gas, duration, calc)
        name - строка, наименование измерения, используемое при расчёте
        gas - целое число, номер газового клапана, который будет открыт перед измерением
        duration - строка, длительность продувки газа.
            Строка длительности - это знаковая последовательность десятичных чисел,
            каждое из которых содержит необязательную дробь и суффикс единицы времени,
            например "300ms", "-1.5h" или "2h45m".
            Допустимые единицы времени:
                "ns", "us" (или "µs"), "ms", "s", "m", "h".
        calc(x, prev) - функция, возвращая выводимое в итоговую таблицу значение.
            обект x содержит:
                поля, значения которых получены при измерении name:
                    x.U - измеренное напряжения ЧЭ
                    x.Q - измеренный расхода газа
                    x.I - измеренный ток
                    x.T - измеренная температура
                    x.C - концентрация ПГС
                метод x:Measure(prevName) - функцию, возвращающую результат y передыдущего измереня:
                    prevName - наименование предыдущего измерения
                    объект y, возвращаемый функцией x:Measure(prevName), представляет собой
                    результат передыдущего измерения prevName и содержит поля:
                        y.U, y.Q, y.I, y.T, y.C - аналогично объекту x
                        y.Value - расчитанное значение из итоговой таблицы
--]]

product('СГГ-1',

        measure("R0A", 1, "1m", function(x)
            return x.I / x.U, true
        end),

        measure("Uр", 0, "0m", function(x)
            return x:Measure('R0A').Value, true
        end),

        measure("T20A", 1, "1m", function(x)
            local R0A = x:Measure('R0A').Value
            local R = x.U / x.I
            return x.T + (R0A / R + 1), true
        end),

        measure("U20A", 1, "1m", function(x)
            local R = x:Measure('T20A').Value
            return x.I * R, true
        end)
)

product('СТМ-10 СКДМ',
        measure("X5", 1, "1m", function(x)
            return x.U / 2 + x.I + x.Q + x.T, true
        end),
        measure("X6", 1, "1m", function(x)
            local x5 = x:Measure('X5')
            return x.U + x.I + x.Q + x.T + x5.Value + x5.I + x5.Q + x5.T, true
        end)
)

